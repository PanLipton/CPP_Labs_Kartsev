# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.boot_timeout = 600  
  

  config.vm.define "baget" do |baget|
    baget.vm.box = "ubuntu/focal64"
    baget.vm.network "private_network", ip: "192.168.50.10"
    
    baget.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"  
      vb.cpus = 2         
      vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
      vb.customize ["modifyvm", :id, "--uartmode1", "file", File::NULL]
    end
    
    baget.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get install -y docker.io
      systemctl start docker
      systemctl enable docker

      docker run -d --name baget \
        -p 5000:80 \
        -v baget-data:/var/baget \
        --restart unless-stopped \
        loicsharma/baget:latest
    SHELL
  end

  config.vm.define "ubuntu" do |ubuntu|
    ubuntu.vm.box = "ubuntu/focal64"
    ubuntu.vm.network "private_network", ip: "192.168.50.20"
    ubuntu.vm.synced_folder "../", "/home/vagrant/project"
    
    ubuntu.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      vb.cpus = 2
      vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
      vb.customize ["modifyvm", :id, "--uartmode1", "file", File::NULL]
    end
    
    ubuntu.vm.provision "shell", inline: <<-SHELL
      wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      dpkg -i packages-microsoft-prod.deb
      apt-get update
      apt-get install -y dotnet-sdk-8.0

      dotnet nuget add source "http://192.168.50.10:5000/v3/index.json" -n "BaGet"

      cd /home/vagrant/project/Lab4
      dotnet build
      dotnet pack
      dotnet tool install --global IKartsev --add-source ./Lab4/nupkg
    SHELL
  end

  config.vm.define "windows" do |windows|
    windows.vm.box = "gusztavvargadr/windows-10"
    windows.vm.network "private_network", ip: "192.168.50.30"
    windows.vm.synced_folder "../", "C:/vagrant/project"
    
    windows.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
      vb.cpus = 2
      vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
      vb.customize ["modifyvm", :id, "--uartmode1", "file", File::NULL]
    end
    
    windows.vm.provision "shell", privileged: true, inline: <<-SHELL
      Set-ExecutionPolicy Bypass -Scope Process -Force
      [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
      iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

      choco install dotnet-sdk -y

      dotnet nuget add source "http://192.168.50.10:5000/v3/index.json" -n "BaGet"

      cd C:/vagrant/project/Lab4
      dotnet build
      dotnet pack
      dotnet tool install --global IKartsev --add-source ./Lab4/nupkg
    SHELL
  end

  config.vm.define "macos" do |macos|
    macos.vm.box = "yusukeito/macos-13.6"
    macos.vm.network "private_network", ip: "192.168.50.40"
    macos.vm.synced_folder "../", "/Users/vagrant/project"
    
    macos.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
      vb.cpus = 2
      vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
      vb.customize ["modifyvm", :id, "--uartmode1", "file", File::NULL]
    end
    
    macos.vm.provision "shell", inline: <<-SHELL
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      brew install --cask dotnet-sdk

      dotnet nuget add source "http://192.168.50.10:5000/v3/index.json" -n "BaGet"

      cd /Users/vagrant/project/Lab4
      dotnet build
      dotnet pack
      dotnet tool install --global IKartsev --add-source ./Lab4/nupkg
    SHELL
  end
end